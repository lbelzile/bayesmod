---
title: "Exercice 3"
---


## Exercise 3.1

Consider the Laplace family of distribution, $\mathsf{La}(\nu, \tau)$, with density
\begin{align*}
g(x; \nu, \tau) = \frac{1}{2\tau} \exp\left(- \frac{|x-\nu|}{\tau}\right), \qquad \nu \in \mathbb{R}, \tau > 0
\end{align*}
as a candidate distribution for rejection sampling from $\mathsf{No}(0,1)$.

1. Provide an inversion sampling algorithm to generate from $\mathsf{La}(\nu, \tau)$.
2. Can you use the proposal to generate from a standard Gaussian? for Student-$t$ with 1 degree of freedom? Justify your answer.
3. Find the optimal parameters and the upper bound $C$ for a location-scale version of the Student-t with $\nu=3$ degrees of freedom to generate from the standard Laplace.
4. Use the accept-reject to simulate 1000 independent observations and compute the empirical acceptance rate.



::: {.solution}

1. The distribution function is 
\begin{align*}
F(x) = \begin{cases}
\frac{1}{2} \exp\left(\frac{x-\nu}{\tau}\right) & x \leq \nu\\
1 - \frac{1}{2} \exp\left(-\frac{x-\nu}{\tau}\right) & x >\nu\\
\end{align*}
and using the quantile transform, set $X=\nu + \tau \log(2U) if $U \leq 0.5$ and $X=\nu - \tau\log(2-2U)$ if $U > 0.5$ for $U \sim \mathsf{U}(0,1)$.
2. The Gaussian has lighter tail than the Laplace, so this won't work. The Cauchy distribution would be a candidate.
3. 

:::


## Exercise 3.2

We revisit [Exercise 1.3](/exercises/01-exercise.html#exercice-1.3), which used a half-Cauchy prior for the exponential waiting time of buses.

The ratio-of-uniform method, implemented in the [`rust` **R** package](https://paulnorthrop.github.io/rust/index.html), can be used to simulate independent draws from the posterior of the rate $\lambda$.
The following code produces 
```{r}
#| eval: true
#| echo: true
nobs <- 10L # number of observations
ybar <- 8   # average waiting time
B <- 1000L  # number of draws
# Un-normalized log posterior: scaled log likelihood + log prior
upost <- function(x){ 
  dgamma(x = x, shape = nobs + 1L, rate = nobs*ybar, log = TRUE) +
    log(2) + dt(x = x, df = 1, log = TRUE)}
post_samp <- rust::ru(logf = upost, 
                      n = B, 
                      d = 1,  # dimension of parameter (scalar)
                      init = nobs/ybar) # initial value of mode
```

Estimate using the Monte Carlo sample:

1. the probability that the waiting time is between 3 and 15 minutes
2. the average waiting time
3. the standard deviation of the waiting time

Next, implement a random walk Metropolis--Hastings algorithm to sample draws from the posterior. Estimate the same quantities and compute the ratio of the variance of the Monte Carlo sample average estimators for both correlated draws (using batch means) and the independent draws.

## Exercise 3.3

Repeat the simulations in Example 3.6, this time with a parametrization in terms of log rates $\lambda_i$ $(i=1,2)$, with the same priors. Use a Metropolis--Hastings algorithm with a Gaussian random walk proposal, updating parameters one at a time. Run four chains in parallel.

1. Tune the variance to reach an approximate acceptance rate of 0.44.
2. Produce diagnostic plots (scatterplots of observations, marginal density plots, trace plots and correlograms). See [`bayesplot`](http://mc-stan.org/bayesplot/articles/plotting-mcmc-draws.html) or `coda`. Comment on  the convergence and mixing of your Markov chain Monte Carlo.
3. Report summary statistics of the chain and compare them with the course notes.


