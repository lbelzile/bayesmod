[
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Outline",
    "section": "",
    "text": "Dr. Léo Belzile\n   4.850, Côte-Sainte-Catherine\n   leo.belzile@hec.ca\n\n\n\n\n\n   Winter 2025\n   Monday\n   15:30-18:30\n   TBD"
  },
  {
    "objectID": "syllabus.html#textbooks",
    "href": "syllabus.html#textbooks",
    "title": "Outline",
    "section": "Textbooks",
    "text": "Textbooks\nI will assign readings from McElreath (2020) and Johnson et al. (2022), which is freely available online.\n\n\n\nStatistical Rethinking:A Bayesian Course with Examples in R and Stan\nR. McElreath\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBayes Rules!An Introduction to Applied Bayesian Modeling\nA.A. Johnson, M.Q. Ott, and M. Dogucu\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCourse notes for the class can be found online"
  },
  {
    "objectID": "syllabus.html#other-references",
    "href": "syllabus.html#other-references",
    "title": "Outline",
    "section": "Other references",
    "text": "Other references\nThere will occasionally be additional articles to read; links to these other resources will be included on the content page for that session."
  },
  {
    "objectID": "syllabus.html#student-hours",
    "href": "syllabus.html#student-hours",
    "title": "Outline",
    "section": "Student hours",
    "text": "Student hours\nWednesday afternoon from 13:00 until 16:00 or by appointment. My office, 4.850, is located next to the southern elevators in Côte-Sainte-Catherine building.\nPlease watch this video:\n\n\nStudent hours are set times dedicated to all of you (most professors call these “office hours”; I don’t1). This means that I will be in my office waiting for you to come by if you want to talk to me in person (or remotely) with whatever questions you have. This is the best and easiest way to find me and the best chance for discussing class material and concerns."
  },
  {
    "objectID": "syllabus.html#intellectual-integrity",
    "href": "syllabus.html#intellectual-integrity",
    "title": "Outline",
    "section": "Intellectual integrity",
    "text": "Intellectual integrity\nPlease don’t cheat! The official policy lists the school rules regarding plagiarism and academic integrity."
  },
  {
    "objectID": "syllabus.html#student-services",
    "href": "syllabus.html#student-services",
    "title": "Outline",
    "section": "Student services",
    "text": "Student services\nStudents with special needs should feel free to approach me so we can best discuss accommodations. Do check out HEC Montréal’s disabled students and [psychological] (https://www.hec.ca/en/students/support-resources/psychological-support/index.html) support services."
  },
  {
    "objectID": "syllabus.html#harassment-and-sexual-violence",
    "href": "syllabus.html#harassment-and-sexual-violence",
    "title": "Outline",
    "section": "Harassment and sexual violence",
    "text": "Harassment and sexual violence\nThe Center for Harassment Intervention (BIMH) is the unique access point for all members of the community subject to harassment or sexual violence. You can reach them at 514 343-7020 or by email at harcelement@hec.ca from Monday until Friday, from 8:30 until 4:30pm.\nIf you are in an emergency situation or fear for your safety, call emergency services at 911, followed by HEC Montréal security services at 514 340-6611.\nCheck the school official policy on these matters for more details."
  },
  {
    "objectID": "syllabus.html#family-policy",
    "href": "syllabus.html#family-policy",
    "title": "Outline",
    "section": "Family policy",
    "text": "Family policy\nHEC now has an official family policy, but the following guidelines reflect my own beliefs and commitments towards parent students2\n\nBabies are welcome in class as often as necessary for support feeding relationship.\nYou are welcome to bring your child to class in order to cover unforeseeable gaps in childcare.\nIf you come with babies or toddler, I ask that you sit close to the door so that, in case your little one needs special attention and is disrupting the learning of other students, you may step outside of class until their needs are met. Seats close to the door are reserved for parents attending class with their child."
  },
  {
    "objectID": "syllabus.html#footnotes",
    "href": "syllabus.html#footnotes",
    "title": "Outline",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThere’s fairly widespread misunderstanding about what office hours actually are! Many students often think that they are the times I shouldn’t be disturbed, which is the exact opposite of what they’re for!↩︎\nShamelessly stolen/adapted from similar policy by Drs. Melissa Cheney, Guy Grossman and Rohan Alexander↩︎"
  },
  {
    "objectID": "exercises/04-exercise.html",
    "href": "exercises/04-exercise.html",
    "title": "Exercise 4",
    "section": "",
    "text": "The Pareto distribution with shape \\(\\alpha&gt;0\\) and scale \\(\\tau&gt;0\\) has density \\[\nf(x; \\alpha, \\tau) = \\alpha x^{-\\alpha-1}\\tau^\\alpha \\mathsf{I}(x &gt; \\tau).\n\\] It can be used to model power laws in insurance and finance, or in demography. The uscitypopn data set in the hecbayes package contains the population size of cities above 200K inhabitants in the United States, from the 2020 census.\n\nUsing improper priors, write the joint posterior for a simple random sample of size \\(n\\) and derive the conditional distributions \\(p(\\alpha \\mid \\boldsymbol{y}, \\tau)\\) and \\(p(\\tau \\mid \\alpha, \\boldsymbol{y})\\). Hint: the conditional density \\(p(\\alpha \\mid \\boldsymbol{y}, \\tau)\\) is that of a gamma; use the fact that \\(m^\\alpha=\\exp\\{\\alpha\\log(m)\\}\\) for \\(m&gt;0\\).\nThe mononomial distribution \\(\\mathsf{Mono}(a,b)\\) has density \\(p(x) \\propto x^{a-1}\\mathsf{I}(0 \\leq x \\leq b)\\) for \\(a, b &gt; 0\\). Find the normalizing constant for the distribution and obtain the quantile function to derive a random number generator.\nImplement Gibbs sampling for this problem for the uscitypopn data. Draw enough observations to obtain an effective sample size of at least 1000 observations. Calculate the accuracy of your estimates.",
    "crumbs": [
      "Exercises",
      "Markov chain Monte Carlo",
      "Exercise 4"
    ]
  },
  {
    "objectID": "exercises/04-exercise.html#exercise-4.1",
    "href": "exercises/04-exercise.html#exercise-4.1",
    "title": "Exercise 4",
    "section": "",
    "text": "The Pareto distribution with shape \\(\\alpha&gt;0\\) and scale \\(\\tau&gt;0\\) has density \\[\nf(x; \\alpha, \\tau) = \\alpha x^{-\\alpha-1}\\tau^\\alpha \\mathsf{I}(x &gt; \\tau).\n\\] It can be used to model power laws in insurance and finance, or in demography. The uscitypopn data set in the hecbayes package contains the population size of cities above 200K inhabitants in the United States, from the 2020 census.\n\nUsing improper priors, write the joint posterior for a simple random sample of size \\(n\\) and derive the conditional distributions \\(p(\\alpha \\mid \\boldsymbol{y}, \\tau)\\) and \\(p(\\tau \\mid \\alpha, \\boldsymbol{y})\\). Hint: the conditional density \\(p(\\alpha \\mid \\boldsymbol{y}, \\tau)\\) is that of a gamma; use the fact that \\(m^\\alpha=\\exp\\{\\alpha\\log(m)\\}\\) for \\(m&gt;0\\).\nThe mononomial distribution \\(\\mathsf{Mono}(a,b)\\) has density \\(p(x) \\propto x^{a-1}\\mathsf{I}(0 \\leq x \\leq b)\\) for \\(a, b &gt; 0\\). Find the normalizing constant for the distribution and obtain the quantile function to derive a random number generator.\nImplement Gibbs sampling for this problem for the uscitypopn data. Draw enough observations to obtain an effective sample size of at least 1000 observations. Calculate the accuracy of your estimates.",
    "crumbs": [
      "Exercises",
      "Markov chain Monte Carlo",
      "Exercise 4"
    ]
  },
  {
    "objectID": "exercises/04-exercise.html#exercise-4.2",
    "href": "exercises/04-exercise.html#exercise-4.2",
    "title": "Exercise 4",
    "section": "Exercise 4.2",
    "text": "Exercise 4.2\nImplement the Bayesian LASSO for the diabetes cancer surgery from package lars. Check Park & Casella (2008) for the details of the Gibbs sampling.\n\nFit the model for a range of values of \\(\\lambda\\) and produce parameter estimate paths to replicate Figure 2 of the paper.\nCheck the effective sample size and comment on the mixing. Is it impacted by the tuning parameter?\nImplement the method of section 3.1 from Park & Casella (2008) by adding \\(\\lambda\\) as a parameter.\nFor three models with different values of \\(\\lambda\\), compute the widely applicable information criterion (WAIC) and use it to assess predictive performance.",
    "crumbs": [
      "Exercises",
      "Markov chain Monte Carlo",
      "Exercise 4"
    ]
  },
  {
    "objectID": "exercises/04-solution.html",
    "href": "exercises/04-solution.html",
    "title": "Solution 4",
    "section": "",
    "text": "The Pareto distribution with shape \\(\\alpha&gt;0\\) and scale \\(\\tau&gt;0\\) has density \\[\nf(x; \\alpha, \\tau) = \\alpha x^{-\\alpha-1}\\tau^\\alpha \\mathsf{I}(x &gt; \\tau).\n\\] It can be used to model power laws in insurance and finance, or in demography. The uscitypopn data set in the hecbayes package contains the population size of cities above 200K inhabitants in the United States, from the 2020 census.\n\nUsing improper priors, write the joint posterior for a simple random sample of size \\(n\\) and derive the conditional distributions \\(p(\\alpha \\mid \\boldsymbol{y}, \\tau)\\) and \\(p(\\tau \\mid \\alpha, \\boldsymbol{y})\\).\nThe mononomial distribution \\(\\mathsf{Mono}(a,b)\\) has density \\(p(x) \\propto x^{a-1}\\mathsf{I}(0 \\leq x \\leq b)\\). Find the normalizing constant for the distribution and obtain the quantile function to derive a sampler.\nImplement Gibbs sampling for this problem for the uscitypopn data. Draw enough observations to obtain an effective sample size of at least 1000 observations. Calculate the accuracy of your estimates?\n\n\nSolution. With improper prior, the joint posterior is the product of the likelihood contributions so \\[\np(\\alpha, \\tau \\mid \\boldsymbol{y}) \\propto \\alpha^n \\left(\\prod_{i=1}^n y_i\\right)^{-\\alpha-1} \\tau^{-n\\alpha} \\mathsf{I}(\\min_i y_i &gt; \\tau).\n\\] Using the hint, write the conditional density for \\(\\alpha\\) given the rest as \\[\\begin{align*}\np(\\alpha \\mid \\boldsymbol{y}, \\tau) \\propto \\alpha^n \\left( \\frac{\\prod_{i=1}^n y_i}{\\tau^n}\\right)^{-\\alpha} = \\alpha^{(n+1)-1} \\exp\\left\\{-\\alpha \\left(\\sum_{i=1}^n\\log y_i - n\\log \\tau\\right) \\right\\}\n\\end{align*}\\] which is \\(\\mathsf{Gamma}\\big(n+1, \\sum_{i=1}^n \\log y_i - n \\log \\tau \\big)\\). For the second, we have \\[\\begin{align*}\np(\\tau \\mid \\alpha, \\boldsymbol{y}) \\propto \\tau^{n\\alpha} \\mathsf{I}(\\min_{i} y_i &gt; \\tau),\n\\end{align*}\\] a mononomial distribution with parameters \\(a=n\\alpha+1\\) and \\(b = \\min_{i} y_i\\).\nTo find the normalizing constant of the mononomial distribution, we simply integrate the unnormalized density to obtain the reciprocal constant: if \\(c = \\int g(x) \\mathrm{d} x\\) for \\(c &lt; \\infty\\) and \\(g(x) \\geq 0\\) for all \\(x\\), then \\(g(x)/c\\) integrates to one and is a valid density. Thus, we find \\[c= \\int_0^b x^{a-1}\\mathrm{d} x = \\left[\\frac{x^{a}}{a}\\right]_{0}^b= \\frac{b^{a}}{a}.\\] The distribution function is \\(G(x) = (x/b)^{a}\\) for \\(x \\in [0,b]\\) and the quantile function \\(G^{-1}(u) = u^{1/a}b\\).\n\nqmono &lt;- function(u, a, b, log = FALSE){\n  stopifnot(isTRUE(all(a &gt; 0, b &gt; 0, u &gt;= 0, u &lt;= 1)))\n logq &lt;-   log(u)/(a+1) + log(b)\n if(log){ return(logq)} else { return(exp(logq)) }\n}\n\n\n# Load data\ndata(\"uscitypopn\", package = \"hecbayes\")\ny &lt;- uscitypopn$population\nn &lt;- length(y)\n# Summary statistics appearing in the posterior distribution\nsumlogy &lt;- sum(log(y))\nminy &lt;- min(y)\n# MCMC via Gibbs sampling\nB &lt;- 1e4L\nchains &lt;- matrix(0, nrow = B, ncol = 2)\ncolnames(chains) &lt;- c(\"alpha\", \"tau\")\ncurr &lt;- c(2, 2e5)\nfor(b in seq_len(B)){\n  chains[b,1] &lt;- curr[1] &lt;- rgamma(n = 1, shape = n+1, rate = sumlogy - n*log(curr[2]))\n  chains[b,2] &lt;- curr[2] &lt;- qmono(runif(1), a = n*curr[1]+1, b = miny)\n}\nchains &lt;- coda::as.mcmc(chains)\n# Compute effective sample size\ncoda::effectiveSize(chains)\n\n    alpha       tau \n 9590.174 10000.000 \n\nsummary(chains)\n\n\nIterations = 1:10000\nThinning interval = 1 \nNumber of chains = 1 \nSample size per chain = 10000 \n\n1. Empirical mean and standard deviation for each variable,\n   plus standard error of the mean:\n\n           Mean        SD  Naive SE Time-series SE\nalpha 1.386e+00    0.1297  0.001297       0.001324\ntau   1.991e+05 1257.8213 12.578213      12.578213\n\n2. Quantiles for each variable:\n\n           2.5%       25%       50%      75%     97.5%\nalpha 1.142e+00 1.298e+00 1.382e+00 1.47e+00 1.651e+00\ntau   1.957e+05 1.986e+05 1.995e+05 2.00e+05 2.004e+05\n\n\nWe can see that the autocorrelation is minimal, so the sampler is quite efficient.",
    "crumbs": [
      "Exercises",
      "Markov chain Monte Carlo",
      "Solution 4"
    ]
  },
  {
    "objectID": "exercises/04-solution.html#exercise-4.1",
    "href": "exercises/04-solution.html#exercise-4.1",
    "title": "Solution 4",
    "section": "",
    "text": "The Pareto distribution with shape \\(\\alpha&gt;0\\) and scale \\(\\tau&gt;0\\) has density \\[\nf(x; \\alpha, \\tau) = \\alpha x^{-\\alpha-1}\\tau^\\alpha \\mathsf{I}(x &gt; \\tau).\n\\] It can be used to model power laws in insurance and finance, or in demography. The uscitypopn data set in the hecbayes package contains the population size of cities above 200K inhabitants in the United States, from the 2020 census.\n\nUsing improper priors, write the joint posterior for a simple random sample of size \\(n\\) and derive the conditional distributions \\(p(\\alpha \\mid \\boldsymbol{y}, \\tau)\\) and \\(p(\\tau \\mid \\alpha, \\boldsymbol{y})\\).\nThe mononomial distribution \\(\\mathsf{Mono}(a,b)\\) has density \\(p(x) \\propto x^{a-1}\\mathsf{I}(0 \\leq x \\leq b)\\). Find the normalizing constant for the distribution and obtain the quantile function to derive a sampler.\nImplement Gibbs sampling for this problem for the uscitypopn data. Draw enough observations to obtain an effective sample size of at least 1000 observations. Calculate the accuracy of your estimates?\n\n\nSolution. With improper prior, the joint posterior is the product of the likelihood contributions so \\[\np(\\alpha, \\tau \\mid \\boldsymbol{y}) \\propto \\alpha^n \\left(\\prod_{i=1}^n y_i\\right)^{-\\alpha-1} \\tau^{-n\\alpha} \\mathsf{I}(\\min_i y_i &gt; \\tau).\n\\] Using the hint, write the conditional density for \\(\\alpha\\) given the rest as \\[\\begin{align*}\np(\\alpha \\mid \\boldsymbol{y}, \\tau) \\propto \\alpha^n \\left( \\frac{\\prod_{i=1}^n y_i}{\\tau^n}\\right)^{-\\alpha} = \\alpha^{(n+1)-1} \\exp\\left\\{-\\alpha \\left(\\sum_{i=1}^n\\log y_i - n\\log \\tau\\right) \\right\\}\n\\end{align*}\\] which is \\(\\mathsf{Gamma}\\big(n+1, \\sum_{i=1}^n \\log y_i - n \\log \\tau \\big)\\). For the second, we have \\[\\begin{align*}\np(\\tau \\mid \\alpha, \\boldsymbol{y}) \\propto \\tau^{n\\alpha} \\mathsf{I}(\\min_{i} y_i &gt; \\tau),\n\\end{align*}\\] a mononomial distribution with parameters \\(a=n\\alpha+1\\) and \\(b = \\min_{i} y_i\\).\nTo find the normalizing constant of the mononomial distribution, we simply integrate the unnormalized density to obtain the reciprocal constant: if \\(c = \\int g(x) \\mathrm{d} x\\) for \\(c &lt; \\infty\\) and \\(g(x) \\geq 0\\) for all \\(x\\), then \\(g(x)/c\\) integrates to one and is a valid density. Thus, we find \\[c= \\int_0^b x^{a-1}\\mathrm{d} x = \\left[\\frac{x^{a}}{a}\\right]_{0}^b= \\frac{b^{a}}{a}.\\] The distribution function is \\(G(x) = (x/b)^{a}\\) for \\(x \\in [0,b]\\) and the quantile function \\(G^{-1}(u) = u^{1/a}b\\).\n\nqmono &lt;- function(u, a, b, log = FALSE){\n  stopifnot(isTRUE(all(a &gt; 0, b &gt; 0, u &gt;= 0, u &lt;= 1)))\n logq &lt;-   log(u)/(a+1) + log(b)\n if(log){ return(logq)} else { return(exp(logq)) }\n}\n\n\n# Load data\ndata(\"uscitypopn\", package = \"hecbayes\")\ny &lt;- uscitypopn$population\nn &lt;- length(y)\n# Summary statistics appearing in the posterior distribution\nsumlogy &lt;- sum(log(y))\nminy &lt;- min(y)\n# MCMC via Gibbs sampling\nB &lt;- 1e4L\nchains &lt;- matrix(0, nrow = B, ncol = 2)\ncolnames(chains) &lt;- c(\"alpha\", \"tau\")\ncurr &lt;- c(2, 2e5)\nfor(b in seq_len(B)){\n  chains[b,1] &lt;- curr[1] &lt;- rgamma(n = 1, shape = n+1, rate = sumlogy - n*log(curr[2]))\n  chains[b,2] &lt;- curr[2] &lt;- qmono(runif(1), a = n*curr[1]+1, b = miny)\n}\nchains &lt;- coda::as.mcmc(chains)\n# Compute effective sample size\ncoda::effectiveSize(chains)\n\n    alpha       tau \n 9590.174 10000.000 \n\nsummary(chains)\n\n\nIterations = 1:10000\nThinning interval = 1 \nNumber of chains = 1 \nSample size per chain = 10000 \n\n1. Empirical mean and standard deviation for each variable,\n   plus standard error of the mean:\n\n           Mean        SD  Naive SE Time-series SE\nalpha 1.386e+00    0.1297  0.001297       0.001324\ntau   1.991e+05 1257.8213 12.578213      12.578213\n\n2. Quantiles for each variable:\n\n           2.5%       25%       50%      75%     97.5%\nalpha 1.142e+00 1.298e+00 1.382e+00 1.47e+00 1.651e+00\ntau   1.957e+05 1.986e+05 1.995e+05 2.00e+05 2.004e+05\n\n\nWe can see that the autocorrelation is minimal, so the sampler is quite efficient.",
    "crumbs": [
      "Exercises",
      "Markov chain Monte Carlo",
      "Solution 4"
    ]
  },
  {
    "objectID": "exercises/04-solution.html#exercise-4.2",
    "href": "exercises/04-solution.html#exercise-4.2",
    "title": "Solution 4",
    "section": "Exercise 4.2",
    "text": "Exercise 4.2\nImplement the Bayesian LASSO for the diabetes cancer surgery from package lars. Check Park & Casella (2008) for the details of the Gibbs sampling.\n\nFit the model for a range of values of \\(\\lambda\\) and produce parameter estimate paths to replicate Figure 2 of the paper.\nCheck the effective sample size and comment on the mixing. Is it impacted by the tuning parameter?\nImplement the method of section 3.1 from Park & Casella (2008) by adding \\(\\lambda\\) as a parameter.\nFor three models with different values of \\(\\lambda\\), compute the widely applicable information criterion (WAIC) and use it to assess predictive performance.\n\n\nSolution. We first setup a Gibbs sampler for a given value of \\(\\lambda\\), or using the empirical Bayes estimator provided in section 3.1. The effective sampling size for fixed \\(\\lambda\\) is good. If we let the parameter varies, the performance degrades and we obtain an effective size shy of 1000 for 10K iterations for \\(\\lambda\\), and comfortably above 5000 for others.\n\ndata(diabetes, package = \"lars\")\nbayeslasso &lt;- function(lambda = NULL, \n                       B = 1e4L,\n                       x = diabetes$x, \n                       y = diabetes$y){\n  stopifnot(is.matrix(x), is.vector(y))\n  # Scale inputs in case\n  x &lt;- scale(x, center = TRUE, scale = FALSE)\n  y &lt;- y - mean(y)\n  # Check method\n  if(is.null(lambda)){\n    method &lt;- \"empbayes\"\n  } else{\n    method &lt;- \"fixed\" \n  }\n  burnin &lt;- 250L\n  # Precompute quantities and dimensions\n  xtx &lt;- crossprod(x)\n  p &lt;- ncol(x)\n  n &lt;- nrow(x)\n  # Obtain initial estimates\n  linmod &lt;- lm(y ~ x - 1)\n  betaols &lt;- coef(linmod)\n  beta.curr &lt;- betaols\n  sigmasq.curr &lt;- mean(residuals(linmod)^2)\n  tausqinv.curr &lt;- rep(1, p)\n  # Value reported in the text for the optimal parameter: lambda = 0.237\n  beta.ind &lt;- 1:p\n  sigmasq.ind &lt;- p + 1L\n  tausq.ind &lt;- seq(from = p + 2L, length.out = p, by = 1L)\n  chains &lt;- matrix(0, nrow = B, ncol = p + 1 + p + \n                     ifelse(method == \"fixed\", 0,1))\n  if(method == \"fixed\"){\n    colnames(chains) &lt;- c(paste0(\"beta\", 1:p), \"sigmasq\",\n                          paste0(\"tausq\", 1:p))\n    lambdasq.curr &lt;- lambda[1]^2\n  } else{\n    colnames(chains) &lt;- c(paste0(\"beta\", 1:p), \"sigmasq\", \n                          paste0(\"tausq\", 1:p), \"lambda\")\n    lambdasq.curr &lt;- p*sqrt(sigmasq.curr)/sum(abs(betaols))\n    lambdasq.ind &lt;- ncol(chains)\n  }\n# MCMC loop\nfor(b in seq_len(B + burnin)){\n  ind &lt;- pmax(1, b-burnin)\n  Ainv &lt;- solve(xtx + diag(tausqinv.curr))\n  beta.curr &lt;- chains[ind,beta.ind] &lt;- as.numeric(\n    mvtnorm::rmvnorm(\n      n = 1, \n      mean = as.numeric(Ainv %*% t(x) %*% y), \n      sigma = sigmasq.curr*Ainv))\n  sigmasq.curr &lt;- chains[ind, sigmasq.ind] &lt;- 1/rgamma(\n    n = 1, \n    shape = (n-1+p)/2,\n    rate = sum((y-x %*% beta.curr)^2)/2 + \n      sum(beta.curr^2*tausqinv.curr)/2)\n  # Compute marginal posterior mean for lambda, using section 3.1\n  sumexpect &lt;- 0\n  for(j in 1:p){\n    tausqinv.curr[j] &lt;- actuar::rinvgauss(\n      n = 1, \n      mean = sqrt(lambdasq.curr*sigmasq.curr)/abs(beta.curr[j]),\n      dispersion = 1/lambdasq.curr)\n    if(method != \"fixed\"){\n    sumexpect &lt;- sumexpect + mean(1/actuar::rinvgauss(\n      n = 1000, \n      mean = sqrt(lambdasq.curr*sigmasq.curr)/abs(beta.curr[j]),\n      dispersion = 1/lambdasq.curr))\n    }\n  }\n  chains[ind, tausq.ind] &lt;- 1/tausqinv.curr\n  if(method != \"fixed\"){\n    lambdasq.curr &lt;- chains[ind, lambdasq.ind] &lt;- 2*p/sumexpect\n  }\n}\n  if(method != \"fixed\"){\n  chains[, lambdasq.ind] &lt;- sqrt(chains[, lambdasq.ind])\n}\n# Cast Markov chains to mcmc class object.\nchains.mcmc &lt;- coda::as.mcmc(chains)\n# Effective sample size\ness &lt;- as.integer(round(coda::effectiveSize(chains.mcmc), 0))\n\n# Compute WAIC from log pointwise density\nlppd &lt;- 0\npenalty &lt;- 0\nfor(i in seq_len(n)){\n  lppd_i &lt;- dnorm(\n    x = y[i], \n    mean = as.numeric(chains[,beta.ind] %*% c(x[i,])), \n    sd = sqrt(chains[,sigmasq.ind]), \n    log = TRUE)\n  lppd &lt;- lppd + mean(lppd_i)\n  penalty &lt;- penalty + var(lppd_i)\n}\nwaic &lt;- (-lppd + penalty)/n\nl1norm &lt;- mean(rowSums(abs(chains[,beta.ind])))\n\n# Parameter estimates and 95% equitailed credible intervals\nquant &lt;- t(apply(chains, 2, \n                quantile, prob = c(0.025, 0.5, 0.975)))\nregpar &lt;- as.data.frame(cbind(quant,\n                colMeans(chains),\n                coda::batchSE(chains.mcmc),\n                ess))\nregpar$pars &lt;- rownames(quant)\nrownames(regpar) &lt;- NULL\ncolnames(regpar) &lt;- c(\"lower\", \"median\", \"upper\", \n                      \"mean\", \"se\", \"ess\", \"par\")\nregpar &lt;- regpar[,c(7,4:5,1:3,6)]\nattr(regpar, \"waic\") &lt;- waic\nattr(regpar, \"l1norm\") &lt;- l1norm\n return(regpar)\n}\n\n# Call the MCMC sampler\nset.seed(2023)\nlasso_empbayes &lt;- bayeslasso(lambda = NULL)\n# Extract the value of WAIC\nwaic &lt;- attr(lasso_empbayes, \"waic\")\n\n\n\n\n\n\n\n\n\nFigure 1: Standardized median posterior estimates of the coefficients for the Bayesian LASSO with 95 percent equitailed credible intervals, with \\(\\lambda\\) estimated using empirical Bayes. Ordinary least square estimates are denoted by crosses.\n\n\n\n\n\nThe plot corresponds to Figure 2 of Park & Casella (2008) and the posterior summaries, reported in Table 1, are also in line with those of the paper.\n\n\n\n\nTable 1: Estimates posterior summaries from the Bayesian LASSO, based on 10K draws. Posterior means and adjusted standard errors, posterior median and equitailed 95 percent credible intervals, effective sample.\n\n\n\n\n\n\npar\nmean\nse\nlower\nmedian\nupper\ness\n\n\n\n\nbeta1\n-3.14\n0.58\n-112.92\n-2.34\n105.68\n10000\n\n\nbeta2\n-214.04\n0.58\n-331.89\n-213.49\n-97.58\n9012\n\n\nbeta3\n523.41\n0.76\n393.47\n523.87\n656.33\n9062\n\n\nbeta4\n307.64\n0.72\n177.38\n307.69\n439.33\n8957\n\n\nbeta5\n-187.12\n2.60\n-587.60\n-170.71\n125.58\n5089\n\n\nbeta6\n7.79\n1.92\n-272.14\n-1.62\n344.59\n6056\n\n\nbeta7\n-154.43\n1.62\n-385.12\n-153.23\n72.40\n5259\n\n\nbeta8\n96.44\n1.60\n-131.62\n87.10\n353.40\n6460\n\n\nbeta9\n524.09\n1.26\n331.93\n520.90\n727.05\n6630\n\n\nbeta10\n64.21\n0.69\n-49.05\n61.87\n188.78\n8897\n\n\nsigmasq\n2952.78\n2.00\n2585.93\n2945.02\n3370.20\n9511\n\n\ntausq1\n20.55\n0.26\n0.24\n11.13\n93.70\n10000\n\n\ntausq2\n34.75\n0.33\n3.42\n25.19\n122.06\n8868\n\n\ntausq3\n58.44\n0.36\n13.42\n49.09\n155.41\n9375\n\n\ntausq4\n41.99\n0.39\n6.09\n32.35\n133.19\n8972\n\n\ntausq5\n34.17\n0.45\n1.03\n24.45\n122.56\n5159\n\n\ntausq6\n26.82\n0.38\n0.57\n17.18\n105.39\n7441\n\n\ntausq7\n31.06\n0.35\n1.04\n21.46\n118.21\n8954\n\n\ntausq8\n27.47\n0.33\n0.56\n17.94\n107.05\n8551\n\n\ntausq9\n59.02\n0.47\n12.95\n49.73\n160.42\n7805\n\n\ntausq10\n23.35\n0.30\n0.40\n13.66\n102.21\n9703\n\n\nlambda\n0.24\n0.00\n0.21\n0.24\n0.26\n1038\n\n\n\n\n\n\n\n\nFor the last part, we can simply run the MCMC and find the value of \\(\\lambda\\) that yields the lowest value of WAIC.\n\nset.seed(2023)\nblasso1 &lt;- bayeslasso(lambda = 0.1)\nblasso2 &lt;- bayeslasso(lambda = 0.2)\nblasso3 &lt;- bayeslasso(lambda = 1)\n2*length(diabetes$y)*c(attr(blasso1, \"waic\"), attr(blasso2, \"waic\"), attr(blasso3, \"waic\"))\n\n[1] 4802.449 4801.923 4804.496",
    "crumbs": [
      "Exercises",
      "Markov chain Monte Carlo",
      "Solution 4"
    ]
  }
]